name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  security-events: write

# Allow only one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint . --max-warnings=0

      - name: Check formatting
        run: npx prettier --check .

      - name: Run SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Secret scanning
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage --coverageThreshold='{"global":{"branches":40,"functions":40,"lines":40,"statements":40}}'

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4

      - name: Run browser tests
        run: |
          npx playwright install --with-deps
          npm run test:e2e

  performance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        env:
          LIGHTHOUSE_PORT: 3000
          LIGHTHOUSE_HOST: 'localhost'
          LIGHTHOUSE_URL: ${{ github.event.pull_request.head.repo.html_url || format('https://{0}.github.io/{1}', github.repository_owner, github.event.repository.name) }}
        with:
          configPath: './lighthouserc.cjs'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Check bundle size
        uses: preactjs/compressed-size-action@v2
        with:
          pattern: 'docs/js/*.js'
          strip-hash: ''

  deploy-preview:
    needs: [code-quality, security, test, performance]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    environment:
      name: preview-${{ github.event.number }}
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload preview artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
          name: github-pages-preview

      - name: Deploy preview
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: true
          artifact_name: github-pages-preview

  deploy-production:
    needs: [code-quality, security, test, performance]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload production artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

      - name: Deploy to production
        id: deployment
        uses: actions/deploy-pages@v4
